{
  "plugins": ["@typescript-eslint", "simple-import-sort", "unused-imports"],
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:redux-saga/recommended",
    "plugin:sonarjs/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "custom": {
          "regex": "Enum$",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/indent": "off",
    "react/display-name": "off",
    "prettier/prettier": ["error", {}, { "usePrettierrc": true }],
    "react/prop-types": "off",
    "no-console": [
      2,
      {
        "allow": ["warn", "error", "debug"]
      }
    ],
    "max-len": ["error", 120],
    "unused-imports/no-unused-imports": "warn",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "simple-import-sort/exports": "warn",
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // ext library & side effect imports
          ["^@?\\w", "^\\u0000"],
          // {s}css files
          ["^.+\\.s?csxs$"],
          // Configs
          ["^@/configs"],
          // Components
          ["^@/components"],
          // Hooks
          ["^@/hooks"],
          // Services
          ["^@/services"],
          // Utils
          ["^@/utils"],
          // Store
          ["^@/store"],
          // Styles
          ["^@/styles"],
          // Other imports
          ["^@/"],
          // relative paths up until 3 level
          [
            "^\\./?$",
            "^\\.(?!/?$)",
            "^\\.\\./?$",
            "^\\.\\.(?!/?$)",
            "^\\.\\./\\.\\./?$",
            "^\\.\\./\\.\\.(?!/?$)",
            "^\\.\\./\\.\\./\\.\\./?$",
            "^\\.\\./\\.\\./\\.\\.(?!/?$)"
          ],
          ["^@/types"],
          // other that didn't fit in
          ["^"]
        ]
      }
    ],
    "no-nested-ternary": "error",
    "no-negated-condition": "error"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-member-accessibility": ["error"]
      }
    },
    {
      "files": ["*.saga.ts"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    }
  ]
}
